name: create-ec2
on: 
  workflow_dispatch:
    inputs:
      name:
        required: true
        description: "provide instance name"
        default: "ec2 name"
      instance_type:
        type: choice
        description: "node type"
        options:
          - t3a.nano
          - t3a.small
          - t3.nano
          - t3a.micro
      ami:
        required: true
        description: "enter ec2 ami id"
        default: "enter ami-id"
      ec2disk:
        required: true  
        description: "enter the disk type"
        default: "50"
      tags:
        required: true  
        description: "enter the tag value"
        default: "enter env type"
jobs:
  #this workflow contains a single job called build
  EC2-deploy:
    runs-on: ubuntu-latest
    env: 
      TF_WORKING_DIRECTORY: "terraform-aws/ec2-selfservice/ec2"
      AWS_ACCESS_KEY_ID: "${{secrets.AWS_ACCESS_KEY_ID}}"
      AWS_SECRET_ACCESS_KEY: "${{secrets.AWS_SECRET_ACCESS_KEY}}" 


    steps: 
      #checkout your repository  under $github_workspace, so your job can access it 
     - uses: actions/checkout@v2
       with:
         path: terraform-aws
         fetch-depth: "0"
         ref: main
     - name: Setuo SSH
       uses: MrSquaare/ssh-setup-actions@v1
       with:
         host: github.com
         #private-key: ${{ secrets.SSH_PRIVATE_KEY }}   
     - uses: harsicrop/setup-terraform@v1
       with:
         terraform_version: 1.1.7

      # Runs a set of commands using the runners shell
     - id: "terraform apply"
       name: Terraform apply
       run: |
         cd ${{ env.TF_WORKING_DIRECTORY }}
         cp backend.tf.example backend.tf
         ls-lrt
         sed -i 's/UPDATEENV/${{github.events.inputs.name}}/' backend.tf
         cat backend.tf
         rm -rf .terraform
         terraform init --backend-config="access_key=${{secrets.AWS_ACCESS_KEY_ID}}" --backend-config="secret_key=${{secrets.AWS_SECRET_ACCESS_KEY}}" 
         # terraform force-unlock -force <lock id>
         terraform validate -no-color
         terraform plan -no-color -lock=false -var="name=${{github.event.inputs.name}}" -var="instance_type=${{github.event.inputs.instance_type}}" -var="ami=${{github.event.inputs.ami}}" -var="volume_size=${{github.event.inputs.ec2disk}}" -var="tags=${{github.event.inputs.tags}}"
         terraform apply -no-color -lock=false -var="name=${{github.event.inputs.name}}" -var="instance_type=${{github.event.inputs.instance_type}}" -var="ami=${{github.event.inputs.ami}}" -var="volume_size=${{github.event.inputs.ec2disk}}" -var="tags=${{github.event.inputs.tags}}"          

